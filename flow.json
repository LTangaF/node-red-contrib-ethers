[{"id":"a3dd7976.9afb18","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"5887f7f7.b0c688","type":"tab","label":"Flow 2 prv","disabled":false,"info":""},{"id":"d9408ddb.b424e","type":"ethers-network","z":"","name":"infura kovan","url":"kovan","description":""},{"id":"3ff60155.4a9ffe","type":"ethers-wallet","z":"","name":"MM kovan Test","keyPublic":"0x87e2b8dB6c28acaA46cC5C2A5930d385b2cA1FCb"},{"id":"38ee9d69.f177a2","type":"ethers-contract","z":"","name":"kovan contract","address":"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa","abi":""},{"id":"5bf9a9e9.c0cf28","type":"ethers-contract","z":"","name":"Kovan Test Contract21","address":"0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa","abi":""},{"id":"7d3870a1.0a2b3","type":"ethers-contract","z":"","name":"Kovan Moloch v2","address":"0xd33Fc04d1aF591Bdd43E31869D7537F25075A833","abi":""},{"id":"2ae022aa.e8c26e","type":"inject","z":"a3dd7976.9afb18","name":"","topic":"","payload":"{}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":240,"wires":[["41257b74.18ea24"]]},{"id":"d2682278.e60c8","type":"debug","z":"a3dd7976.9afb18","name":"Approve DAI","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":410,"y":180,"wires":[]},{"id":"41257b74.18ea24","type":"function","z":"a3dd7976.9afb18","name":"Call ethToTokenSwapInput on Uniswap","func":"ethers = global.get(\"ethers\");\n\nlet abi = flow.get(\"abi_uniswap_exchange\");\n\netherAmount = ethers.utils.parseEther('1');\nmimToken = ethers.utils.parseEther('10');\n\nmsg.payload.config = {\n  \"contractAddress\" : flow.get(\"contract_address_dai_exchange\"),\n  abi,\n  \"pk\" : flow.get(\"deployer_pk\"),\n  \"apiCall\" : \"ethToTokenSwapInput\",\n  \"value\" : etherAmount,\n  \"args\" : [mimToken, ethers.utils.parseEther('100')]\n};\nreturn msg;\n\n","outputs":1,"noerr":0,"x":400,"y":240,"wires":[["d2682278.e60c8","feb0a544.6e8a28"]]},{"id":"1da36d1e.bf57d3","type":"debug","z":"a3dd7976.9afb18","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":990,"y":240,"wires":[]},{"id":"feb0a544.6e8a28","type":"function","z":"a3dd7976.9afb18","name":"Contract Executor ","func":"ethers = global.get('ethers');\nlet network  = flow.get(\"network\");\n\nlet { pk, contractAddress, apiCall, args, abi, byteCode, value } = msg.payload.config;\nconst provider = ethers.getDefaultProvider(network);\n\nlet wallet;\nlet contract;\n\nif(pk){\n    wallet = new ethers.Wallet(pk, provider);\n    contract = new ethers.Contract(contractAddress, abi, wallet);\n}else{\n    // read only\n    contract = new ethers.Contract(contractAddress, abi, provider);\n}\n\n// All overrides are optional\nlet overrides = {\n    // The maximum units of gas for the transaction to use\n    gasLimit: 1000000,\n\n    // The price (in wei) per unit of gas\n   // gasPrice: ethers.utils.parseUnits('9.0', 'gwei'),\n    // value: ethers.utils.parseEther('1')\n};\n\nif(value){\n    overrides.value = value;\n}\nargs.push(overrides);\n\n\nlet func = contract[apiCall];\nasync function process () {\n    try{\n        let resp = await func.apply(node, args);\n        // msg.payload.trxHash = resp.hash;\n        msg.payload.response = resp;\n    }catch(error){\n        msg.payload.error = error;\n    }\n    node.send(msg, false);\n    node.done();\n    return;\n}\n\nprocess();\n\nreturn;","outputs":1,"noerr":0,"x":730,"y":240,"wires":[["1da36d1e.bf57d3"]]},{"id":"dfa67679.8bf8a8","type":"comment","z":"a3dd7976.9afb18","name":"swap eth to dai token","info":"","x":120,"y":140,"wires":[]},{"id":"5e5efe4c.c85da","type":"change","z":"5887f7f7.b0c688","name":"","rules":[{"t":"set","p":"t","pt":"global","to":"test","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":150,"y":100,"wires":[[]]},{"id":"500137e.e2a0bc8","type":"change","z":"a3dd7976.9afb18","name":"","rules":[{"t":"set","p":"trr","pt":"flow","to":"test2","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":310,"y":340,"wires":[[]]},{"id":"81ebf0b3.220fc","type":"inject","z":"a3dd7976.9afb18","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":0.1,"x":130,"y":340,"wires":[["500137e.e2a0bc8"]]},{"id":"47a877b5.811878","type":"inject","z":"a3dd7976.9afb18","name":"","topic":"","payload":"{}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":290,"y":500,"wires":[["76d1ee77.72adb"]]},{"id":"a0d00c4.081f8f","type":"debug","z":"a3dd7976.9afb18","name":"Approve DAI","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":610,"y":440,"wires":[]},{"id":"76d1ee77.72adb","type":"function","z":"a3dd7976.9afb18","name":"Call ethToTokenSwapInput on Uniswap","func":"ethers = global.get(\"ethers\");\n\nlet abi = flow.get(\"abi_uniswap_exchange\");\n\netherAmount = ethers.utils.parseEther('1');\nmimToken = ethers.utils.parseEther('10');\n\nmsg.payload.config = {\n  \"contractAddress\" : flow.get(\"contract_address_dai_exchange\"),\n  abi,\n  \"pk\" : flow.get(\"deployer_pk\"),\n  \"apiCall\" : \"ethToTokenSwapInput\",\n  \"value\" : etherAmount,\n  \"args\" : [mimToken, ethers.utils.parseEther('100')],\n  \"params\": [\"0x1fe0c4488fd3f3f70204d5709945bc4b0a99672e\"]\n};\nmsg.payload.ether = null;\nreturn msg;\n\n","outputs":1,"noerr":0,"x":590,"y":520,"wires":[["a0d00c4.081f8f","99f965bd.abc548"]]},{"id":"71dc47f0.50e2f8","type":"debug","z":"a3dd7976.9afb18","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1170,"y":560,"wires":[]},{"id":"99f965bd.abc548","type":"ethers-transaction","z":"a3dd7976.9afb18","name":"Infura Kovan","network":"d9408ddb.b424e","wallet":"3ff60155.4a9ffe","output":"payload.result","outputType":"msg","wait":false,"address":"","addressType":"str","ether":"","etherType":"str","gaslimit":"","contract":"7d3870a1.0a2b3","apiCall":"updateDelegateKey","params":[],"param0":"0x5bb3e1774923b75Ecb804E2559149BbD2a39A414","typeParam0":"str","param1":[],"param2":"","param3":"","param4":"","param5":"","x":910,"y":520,"wires":[["71dc47f0.50e2f8"]]},{"id":"b54b5b2.63edda8","type":"inject","z":"a3dd7976.9afb18","name":"","topic":"","payload":"{}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":270,"y":680,"wires":[["cd49c2c1.c3bbe"]]},{"id":"a6d5a34e.07cf6","type":"debug","z":"a3dd7976.9afb18","name":"Approve DAI","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":590,"y":620,"wires":[]},{"id":"cd49c2c1.c3bbe","type":"function","z":"a3dd7976.9afb18","name":"Call ethToTokenSwapInput on Uniswap","func":"ethers = global.get(\"ethers\");\n\nlet abi = flow.get(\"abi_uniswap_exchange\");\n\netherAmount = ethers.utils.parseEther('1');\nmimToken = ethers.utils.parseEther('10');\n\nmsg.payload.config = {\n  \"contractAddress\" : flow.get(\"contract_address_dai_exchange\"),\n  abi,\n  \"pk\" : flow.get(\"deployer_pk\"),\n  \"apiCall\" : \"ethToTokenSwapInput\",\n  \"value\" : etherAmount,\n  \"args\" : [mimToken, ethers.utils.parseEther('100')],\n  \"address\": \"0x1a59adee1e706a07d0bc1a5fabfce316ffa0b754\",\n  \"paramszzz\": [\"0x1fe0c4488fd3f3f70204d5709945bc4b0a99672e\"]\n    \n};\n\nmsg.payload.ether = null;\n\nreturn msg;\n\n","outputs":1,"noerr":0,"x":570,"y":700,"wires":[["a6d5a34e.07cf6","88d56274.bc5e9"]]},{"id":"7fbe6028.c4aa5","type":"debug","z":"a3dd7976.9afb18","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1150,"y":740,"wires":[]},{"id":"88d56274.bc5e9","type":"ethers-transaction","z":"a3dd7976.9afb18","name":"Infura Kovan","network":"d9408ddb.b424e","wallet":"","output":"payload","outputType":"msg","wait":false,"address":"","addressType":"msg","ether":"","etherType":"str","gaslimit":"","contract":"38ee9d69.f177a2","apiCall":"balanceOf","params":["payload.config.address"],"param0":"payload.config.address","typeParam0":"msg","param1":[],"param2":"","param3":"","param4":"","param5":"","x":890,"y":700,"wires":[["7fbe6028.c4aa5"]]}]